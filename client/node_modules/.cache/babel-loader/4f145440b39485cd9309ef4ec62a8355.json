{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/asadullah/LandProject/src/components/QrReader/Data.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport QRCode from 'qrcode';\nimport QrReader from \"react-qr-reader\";\nimport { useState } from 'react';\nimport axios from 'axios';\nexport default function Data() {\n  _s();\n\n  const [qr, setQr] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  let conf = {\n    headers: {\n      Authorization: `Bearer ${JSON.parse(localStorage.getItem(\"token\"))}`,\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  const handleSubmit = qr => {\n    const url1 = `https://192.168.0.111:4000/channels/mychannel/chaincodes/fabcar?args=[\"${qr}\"]&fcn=getHistoryForAsset`;\n\n    if (token) {\n      axios.get(url1, conf).then(response => {\n        if (response.data.result.length === 0) {\n          alert(\"Invalid VIN Number\");\n        } else {\n          window.location.pathname = \"/car/\" + qr + \"/\" + token;\n        }\n      });\n    } else {\n      alert(\"Signin First to Continue\");\n    }\n  };\n\n  const handleError = error => {\n    alert(error);\n  };\n\n  const handleScan = result => {\n    if (result) {\n      axios.get(`https://192.168.0.111:4000/channels/mychannel/chaincodes/fabcar?args=[\"${result}\"]&fcn=getHistoryForAsset`, conf).then(response => {\n        if (response.data.result.length === 0) {\n          alert(\"Invalid VIN Number\");\n        } else {\n          window.location.pathname = \"/car/\" + result;\n        }\n      });\n      console.log(\"------------------\", result); // setToken(() => JSON.parse(localStorage.getItem(\"token\")));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(QrReader, {\n      delay: 300,\n      style: {\n        width: \"100%\"\n      },\n      onError: handleError,\n      onScan: handleScan\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Data, \"fQAuDBAVASznVyzIyz4LHGiQP9w=\");\n\n_c = Data;\n\nvar _c;\n\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"sources":["/home/asadullah/LandProject/src/components/QrReader/Data.js"],"names":["React","QRCode","QrReader","useState","axios","Data","qr","setQr","token","setToken","conf","headers","Authorization","JSON","parse","localStorage","getItem","handleSubmit","url1","get","then","response","data","result","length","alert","window","location","pathname","handleError","error","handleScan","console","log","width"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,EAAD,EAAIC,KAAJ,IAAaJ,QAAQ,CAAC,EAAD,CAA3B;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEF,MAAIO,IAAI,GAAG;AACPC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAA0C,EAD5D;AAEP,sBAAgB;AAFT;AADF,GAAX;;AAOE,QAAMC,YAAY,GAAIX,EAAD,IAAQ;AACzB,UAAMY,IAAI,GAAI,0EAAyEZ,EAAG,2BAA1F;;AAEF,QAAIE,KAAJ,EAAW;AACTJ,MAAAA,KAAK,CAACe,GAAN,CAAUD,IAAV,EAAgBR,IAAhB,EAAsBU,IAAtB,CAA4BC,QAAD,IAAc;AACvC,YAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqBC,MAArB,KAAgC,CAApC,EAAuC;AACrCC,UAAAA,KAAK,CAAC,oBAAD,CAAL;AACD,SAFD,MAEO;AACLC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,QAAhB,GAA2B,UAAUtB,EAAV,GAAe,GAAf,GAAqBE,KAAhD;AACD;AACF,OAND;AAOD,KARD,MAQO;AACLiB,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACD;AACF,GAdD;;AAgBA,QAAMI,WAAW,GAAIC,KAAD,IAAS;AACzBL,IAAAA,KAAK,CAACK,KAAD,CAAL;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAIR,MAAD,IAAU;AACzB,QAAGA,MAAH,EAAU;AACNnB,MAAAA,KAAK,CAACe,GAAN,CAAW,0EAAyEI,MAAO,2BAA3F,EAAuHb,IAAvH,EAA6HU,IAA7H,CAAmIC,QAAD,IAAc;AAC5I,YAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqBC,MAArB,KAAgC,CAApC,EAAuC;AACnCC,UAAAA,KAAK,CAAC,oBAAD,CAAL;AACD,SAFH,MAES;AACLC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,QAAhB,GAA2B,UAAUL,MAArC;AACD;AACV,OANG;AAUAS,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCV,MAAjC,EAXM,CAYN;AAEH;AAEJ,GAjBD;;AAmBA,sBACI;AAAA,2BACK,QAAC,QAAD;AACD,MAAA,KAAK,EAAE,GADN;AAED,MAAA,KAAK,EAAE;AAACW,QAAAA,KAAK,EAAC;AAAP,OAFN;AAGD,MAAA,OAAO,EAAEL,WAHR;AAID,MAAA,MAAM,EAAEE;AAJP;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA7DuB1B,I;;KAAAA,I","sourcesContent":["import React from 'react'\nimport QRCode from 'qrcode'\nimport QrReader from \"react-qr-reader\"\nimport { useState } from 'react';\nimport axios from 'axios'\n\nexport default function Data() {\n    const [qr,setQr] = useState(\"\");\n    const [token, setToken] = useState(\"\");\n  \n  let conf = {\n      headers: {\n        Authorization: `Bearer ${JSON.parse(localStorage.getItem(\"token\"))}`,\n        \"Content-Type\": \"application/json\",\n      },\n    };\n  \n    const handleSubmit = (qr) => {\n        const url1 = `https://192.168.0.111:4000/channels/mychannel/chaincodes/fabcar?args=[\"${qr}\"]&fcn=getHistoryForAsset`;\n    \n      if (token) {\n        axios.get(url1, conf).then((response) => {\n          if (response.data.result.length === 0) {\n            alert(\"Invalid VIN Number\");\n          } else {\n            window.location.pathname = \"/car/\" + qr + \"/\" + token;\n          }\n        });\n      } else {\n        alert(\"Signin First to Continue\");\n      }\n    };\n    \n    const handleError = (error)=>{\n        alert(error)\n    }\n    \n    const handleScan = (result)=>{\n        if(result){\n            axios.get(`https://192.168.0.111:4000/channels/mychannel/chaincodes/fabcar?args=[\"${result}\"]&fcn=getHistoryForAsset`, conf).then((response) => {\n                if (response.data.result.length === 0) {\n                    alert(\"Invalid VIN Number\");\n                  } else {\n                    window.location.pathname = \"/car/\" + result\n                  }\n        })\n\n\n\n            console.log(\"------------------\",result)\n            // setToken(() => JSON.parse(localStorage.getItem(\"token\")));\n\n        }\n       \n    }\n\n    return (\n        <div>\n             <QrReader\n            delay={300}\n            style={{width:\"100%\"}}\n            onError={handleError}\n            onScan={handleScan}\n            />\n            {/* <h3>result: {qr}</h3> */}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}