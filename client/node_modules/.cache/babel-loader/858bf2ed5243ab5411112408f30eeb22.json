{"ast":null,"code":"/*\n Copyright (C) Federico Zivolo 2017\n Distributed under the MIT License (license terms are at http://opensource.org/licenses/MIT).\n */\n(function (e, t) {\n  'object' == typeof exports && 'undefined' != typeof module ? module.exports = t() : 'function' == typeof define && define.amd ? define(t) : e.Popper = t();\n})(this, function () {\n  'use strict';\n\n  function e(e) {\n    return e && '[object Function]' === {}.toString.call(e);\n  }\n\n  function t(e, t) {\n    if (1 !== e.nodeType) return [];\n    var o = getComputedStyle(e, null);\n    return t ? o[t] : o;\n  }\n\n  function o(e) {\n    return 'HTML' === e.nodeName ? e : e.parentNode || e.host;\n  }\n\n  function n(e) {\n    if (!e) return document.body;\n\n    switch (e.nodeName) {\n      case 'HTML':\n      case 'BODY':\n        return e.ownerDocument.body;\n\n      case '#document':\n        return e.body;\n    }\n\n    var i = t(e),\n        r = i.overflow,\n        p = i.overflowX,\n        s = i.overflowY;\n    return /(auto|scroll)/.test(r + s + p) ? e : n(o(e));\n  }\n\n  function r(e) {\n    var o = e && e.offsetParent,\n        i = o && o.nodeName;\n    return i && 'BODY' !== i && 'HTML' !== i ? -1 !== ['TD', 'TABLE'].indexOf(o.nodeName) && 'static' === t(o, 'position') ? r(o) : o : e ? e.ownerDocument.documentElement : document.documentElement;\n  }\n\n  function p(e) {\n    var t = e.nodeName;\n    return 'BODY' !== t && ('HTML' === t || r(e.firstElementChild) === e);\n  }\n\n  function s(e) {\n    return null === e.parentNode ? e : s(e.parentNode);\n  }\n\n  function d(e, t) {\n    if (!e || !e.nodeType || !t || !t.nodeType) return document.documentElement;\n    var o = e.compareDocumentPosition(t) & Node.DOCUMENT_POSITION_FOLLOWING,\n        i = o ? e : t,\n        n = o ? t : e,\n        a = document.createRange();\n    a.setStart(i, 0), a.setEnd(n, 0);\n    var l = a.commonAncestorContainer;\n    if (e !== l && t !== l || i.contains(n)) return p(l) ? l : r(l);\n    var f = s(e);\n    return f.host ? d(f.host, t) : d(e, s(t).host);\n  }\n\n  function a(e) {\n    var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 'top',\n        o = 'top' === t ? 'scrollTop' : 'scrollLeft',\n        i = e.nodeName;\n\n    if ('BODY' === i || 'HTML' === i) {\n      var n = e.ownerDocument.documentElement,\n          r = e.ownerDocument.scrollingElement || n;\n      return r[o];\n    }\n\n    return e[o];\n  }\n\n  function l(e, t) {\n    var o = 2 < arguments.length && void 0 !== arguments[2] && arguments[2],\n        i = a(t, 'top'),\n        n = a(t, 'left'),\n        r = o ? -1 : 1;\n    return e.top += i * r, e.bottom += i * r, e.left += n * r, e.right += n * r, e;\n  }\n\n  function f(e, t) {\n    var o = 'x' === t ? 'Left' : 'Top',\n        i = 'Left' == o ? 'Right' : 'Bottom';\n    return parseFloat(e['border' + o + 'Width'], 10) + parseFloat(e['border' + i + 'Width'], 10);\n  }\n\n  function m(e, t, o, i) {\n    return J(t['offset' + e], t['scroll' + e], o['client' + e], o['offset' + e], o['scroll' + e], ie() ? o['offset' + e] + i['margin' + ('Height' === e ? 'Top' : 'Left')] + i['margin' + ('Height' === e ? 'Bottom' : 'Right')] : 0);\n  }\n\n  function h() {\n    var e = document.body,\n        t = document.documentElement,\n        o = ie() && getComputedStyle(t);\n    return {\n      height: m('Height', e, t, o),\n      width: m('Width', e, t, o)\n    };\n  }\n\n  function c(e) {\n    return se({}, e, {\n      right: e.left + e.width,\n      bottom: e.top + e.height\n    });\n  }\n\n  function g(e) {\n    var o = {};\n    if (ie()) try {\n      o = e.getBoundingClientRect();\n      var i = a(e, 'top'),\n          n = a(e, 'left');\n      o.top += i, o.left += n, o.bottom += i, o.right += n;\n    } catch (e) {} else o = e.getBoundingClientRect();\n    var r = {\n      left: o.left,\n      top: o.top,\n      width: o.right - o.left,\n      height: o.bottom - o.top\n    },\n        p = 'HTML' === e.nodeName ? h() : {},\n        s = p.width || e.clientWidth || r.right - r.left,\n        d = p.height || e.clientHeight || r.bottom - r.top,\n        l = e.offsetWidth - s,\n        m = e.offsetHeight - d;\n\n    if (l || m) {\n      var g = t(e);\n      l -= f(g, 'x'), m -= f(g, 'y'), r.width -= l, r.height -= m;\n    }\n\n    return c(r);\n  }\n\n  function u(e, o) {\n    var i = ie(),\n        r = 'HTML' === o.nodeName,\n        p = g(e),\n        s = g(o),\n        d = n(e),\n        a = t(o),\n        f = parseFloat(a.borderTopWidth, 10),\n        m = parseFloat(a.borderLeftWidth, 10),\n        h = c({\n      top: p.top - s.top - f,\n      left: p.left - s.left - m,\n      width: p.width,\n      height: p.height\n    });\n\n    if (h.marginTop = 0, h.marginLeft = 0, !i && r) {\n      var u = parseFloat(a.marginTop, 10),\n          b = parseFloat(a.marginLeft, 10);\n      h.top -= f - u, h.bottom -= f - u, h.left -= m - b, h.right -= m - b, h.marginTop = u, h.marginLeft = b;\n    }\n\n    return (i ? o.contains(d) : o === d && 'BODY' !== d.nodeName) && (h = l(h, o)), h;\n  }\n\n  function b(e) {\n    var t = e.ownerDocument.documentElement,\n        o = u(e, t),\n        i = J(t.clientWidth, window.innerWidth || 0),\n        n = J(t.clientHeight, window.innerHeight || 0),\n        r = a(t),\n        p = a(t, 'left'),\n        s = {\n      top: r - o.top + o.marginTop,\n      left: p - o.left + o.marginLeft,\n      width: i,\n      height: n\n    };\n    return c(s);\n  }\n\n  function w(e) {\n    var i = e.nodeName;\n    return 'BODY' === i || 'HTML' === i ? !1 : 'fixed' === t(e, 'position') || w(o(e));\n  }\n\n  function y(e, t, i, r) {\n    var p = {\n      top: 0,\n      left: 0\n    },\n        s = d(e, t);\n    if ('viewport' === r) p = b(s);else {\n      var a;\n      'scrollParent' === r ? (a = n(o(t)), 'BODY' === a.nodeName && (a = e.ownerDocument.documentElement)) : 'window' === r ? a = e.ownerDocument.documentElement : a = r;\n      var l = u(a, s);\n\n      if ('HTML' === a.nodeName && !w(s)) {\n        var f = h(),\n            m = f.height,\n            c = f.width;\n        p.top += l.top - l.marginTop, p.bottom = m + l.top, p.left += l.left - l.marginLeft, p.right = c + l.left;\n      } else p = l;\n    }\n    return p.left += i, p.top += i, p.right -= i, p.bottom -= i, p;\n  }\n\n  function E(e) {\n    var t = e.width,\n        o = e.height;\n    return t * o;\n  }\n\n  function v(e, t, o, i, n) {\n    var r = 5 < arguments.length && void 0 !== arguments[5] ? arguments[5] : 0;\n    if (-1 === e.indexOf('auto')) return e;\n    var p = y(o, i, r, n),\n        s = {\n      top: {\n        width: p.width,\n        height: t.top - p.top\n      },\n      right: {\n        width: p.right - t.right,\n        height: p.height\n      },\n      bottom: {\n        width: p.width,\n        height: p.bottom - t.bottom\n      },\n      left: {\n        width: t.left - p.left,\n        height: p.height\n      }\n    },\n        d = Object.keys(s).map(function (e) {\n      return se({\n        key: e\n      }, s[e], {\n        area: E(s[e])\n      });\n    }).sort(function (e, t) {\n      return t.area - e.area;\n    }),\n        a = d.filter(function (e) {\n      var t = e.width,\n          i = e.height;\n      return t >= o.clientWidth && i >= o.clientHeight;\n    }),\n        l = 0 < a.length ? a[0].key : d[0].key,\n        f = e.split('-')[1];\n    return l + (f ? '-' + f : '');\n  }\n\n  function O(e, t, o) {\n    var i = d(t, o);\n    return u(o, i);\n  }\n\n  function L(e) {\n    var t = getComputedStyle(e),\n        o = parseFloat(t.marginTop) + parseFloat(t.marginBottom),\n        i = parseFloat(t.marginLeft) + parseFloat(t.marginRight),\n        n = {\n      width: e.offsetWidth + i,\n      height: e.offsetHeight + o\n    };\n    return n;\n  }\n\n  function x(e) {\n    var t = {\n      left: 'right',\n      right: 'left',\n      bottom: 'top',\n      top: 'bottom'\n    };\n    return e.replace(/left|right|bottom|top/g, function (e) {\n      return t[e];\n    });\n  }\n\n  function S(e, t, o) {\n    o = o.split('-')[0];\n    var i = L(e),\n        n = {\n      width: i.width,\n      height: i.height\n    },\n        r = -1 !== ['right', 'left'].indexOf(o),\n        p = r ? 'top' : 'left',\n        s = r ? 'left' : 'top',\n        d = r ? 'height' : 'width',\n        a = r ? 'width' : 'height';\n    return n[p] = t[p] + t[d] / 2 - i[d] / 2, n[s] = o === s ? t[s] - i[a] : t[x(s)], n;\n  }\n\n  function T(e, t) {\n    return Array.prototype.find ? e.find(t) : e.filter(t)[0];\n  }\n\n  function D(e, t, o) {\n    if (Array.prototype.findIndex) return e.findIndex(function (e) {\n      return e[t] === o;\n    });\n    var i = T(e, function (e) {\n      return e[t] === o;\n    });\n    return e.indexOf(i);\n  }\n\n  function C(t, o, i) {\n    var n = void 0 === i ? t : t.slice(0, D(t, 'name', i));\n    return n.forEach(function (t) {\n      t['function'] && console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n      var i = t['function'] || t.fn;\n      t.enabled && e(i) && (o.offsets.popper = c(o.offsets.popper), o.offsets.reference = c(o.offsets.reference), o = i(o, t));\n    }), o;\n  }\n\n  function N() {\n    if (!this.state.isDestroyed) {\n      var e = {\n        instance: this,\n        styles: {},\n        arrowStyles: {},\n        attributes: {},\n        flipped: !1,\n        offsets: {}\n      };\n      e.offsets.reference = O(this.state, this.popper, this.reference), e.placement = v(this.options.placement, e.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding), e.originalPlacement = e.placement, e.offsets.popper = S(this.popper, e.offsets.reference, e.placement), e.offsets.popper.position = 'absolute', e = C(this.modifiers, e), this.state.isCreated ? this.options.onUpdate(e) : (this.state.isCreated = !0, this.options.onCreate(e));\n    }\n  }\n\n  function k(e, t) {\n    return e.some(function (e) {\n      var o = e.name,\n          i = e.enabled;\n      return i && o === t;\n    });\n  }\n\n  function W(e) {\n    for (var t = [!1, 'ms', 'Webkit', 'Moz', 'O'], o = e.charAt(0).toUpperCase() + e.slice(1), n = 0; n < t.length - 1; n++) {\n      var i = t[n],\n          r = i ? '' + i + o : e;\n      if ('undefined' != typeof document.body.style[r]) return r;\n    }\n\n    return null;\n  }\n\n  function P() {\n    return this.state.isDestroyed = !0, k(this.modifiers, 'applyStyle') && (this.popper.removeAttribute('x-placement'), this.popper.style.left = '', this.popper.style.position = '', this.popper.style.top = '', this.popper.style[W('transform')] = ''), this.disableEventListeners(), this.options.removeOnDestroy && this.popper.parentNode.removeChild(this.popper), this;\n  }\n\n  function B(e) {\n    var t = e.ownerDocument;\n    return t ? t.defaultView : window;\n  }\n\n  function H(e, t, o, i) {\n    var r = 'BODY' === e.nodeName,\n        p = r ? e.ownerDocument.defaultView : e;\n    p.addEventListener(t, o, {\n      passive: !0\n    }), r || H(n(p.parentNode), t, o, i), i.push(p);\n  }\n\n  function A(e, t, o, i) {\n    o.updateBound = i, B(e).addEventListener('resize', o.updateBound, {\n      passive: !0\n    });\n    var r = n(e);\n    return H(r, 'scroll', o.updateBound, o.scrollParents), o.scrollElement = r, o.eventsEnabled = !0, o;\n  }\n\n  function I() {\n    this.state.eventsEnabled || (this.state = A(this.reference, this.options, this.state, this.scheduleUpdate));\n  }\n\n  function M(e, t) {\n    return B(e).removeEventListener('resize', t.updateBound), t.scrollParents.forEach(function (e) {\n      e.removeEventListener('scroll', t.updateBound);\n    }), t.updateBound = null, t.scrollParents = [], t.scrollElement = null, t.eventsEnabled = !1, t;\n  }\n\n  function R() {\n    this.state.eventsEnabled && (cancelAnimationFrame(this.scheduleUpdate), this.state = M(this.reference, this.state));\n  }\n\n  function U(e) {\n    return '' !== e && !isNaN(parseFloat(e)) && isFinite(e);\n  }\n\n  function Y(e, t) {\n    Object.keys(t).forEach(function (o) {\n      var i = '';\n      -1 !== ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(o) && U(t[o]) && (i = 'px'), e.style[o] = t[o] + i;\n    });\n  }\n\n  function j(e, t) {\n    Object.keys(t).forEach(function (o) {\n      var i = t[o];\n      !1 === i ? e.removeAttribute(o) : e.setAttribute(o, t[o]);\n    });\n  }\n\n  function F(e, t, o) {\n    var i = T(e, function (e) {\n      var o = e.name;\n      return o === t;\n    }),\n        n = !!i && e.some(function (e) {\n      return e.name === o && e.enabled && e.order < i.order;\n    });\n\n    if (!n) {\n      var r = '`' + t + '`';\n      console.warn('`' + o + '`' + ' modifier is required by ' + r + ' modifier in order to work, be sure to include it before ' + r + '!');\n    }\n\n    return n;\n  }\n\n  function K(e) {\n    return 'end' === e ? 'start' : 'start' === e ? 'end' : e;\n  }\n\n  function q(e) {\n    var t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1],\n        o = ae.indexOf(e),\n        i = ae.slice(o + 1).concat(ae.slice(0, o));\n    return t ? i.reverse() : i;\n  }\n\n  function V(e, t, o, i) {\n    var n = e.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/),\n        r = +n[1],\n        p = n[2];\n    if (!r) return e;\n\n    if (0 === p.indexOf('%')) {\n      var s;\n\n      switch (p) {\n        case '%p':\n          s = o;\n          break;\n\n        case '%':\n        case '%r':\n        default:\n          s = i;\n      }\n\n      var d = c(s);\n      return d[t] / 100 * r;\n    }\n\n    if ('vh' === p || 'vw' === p) {\n      var a;\n      return a = 'vh' === p ? J(document.documentElement.clientHeight, window.innerHeight || 0) : J(document.documentElement.clientWidth, window.innerWidth || 0), a / 100 * r;\n    }\n\n    return r;\n  }\n\n  function z(e, t, o, i) {\n    var n = [0, 0],\n        r = -1 !== ['right', 'left'].indexOf(i),\n        p = e.split(/(\\+|\\-)/).map(function (e) {\n      return e.trim();\n    }),\n        s = p.indexOf(T(p, function (e) {\n      return -1 !== e.search(/,|\\s/);\n    }));\n    p[s] && -1 === p[s].indexOf(',') && console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n    var d = /\\s*,\\s*|\\s+/,\n        a = -1 === s ? [p] : [p.slice(0, s).concat([p[s].split(d)[0]]), [p[s].split(d)[1]].concat(p.slice(s + 1))];\n    return a = a.map(function (e, i) {\n      var n = (1 === i ? !r : r) ? 'height' : 'width',\n          p = !1;\n      return e.reduce(function (e, t) {\n        return '' === e[e.length - 1] && -1 !== ['+', '-'].indexOf(t) ? (e[e.length - 1] = t, p = !0, e) : p ? (e[e.length - 1] += t, p = !1, e) : e.concat(t);\n      }, []).map(function (e) {\n        return V(e, n, t, o);\n      });\n    }), a.forEach(function (e, t) {\n      e.forEach(function (o, i) {\n        U(o) && (n[t] += o * ('-' === e[i - 1] ? -1 : 1));\n      });\n    }), n;\n  }\n\n  function G(e, t) {\n    var o,\n        i = t.offset,\n        n = e.placement,\n        r = e.offsets,\n        p = r.popper,\n        s = r.reference,\n        d = n.split('-')[0];\n    return o = U(+i) ? [+i, 0] : z(i, p, s, d), 'left' === d ? (p.top += o[0], p.left -= o[1]) : 'right' === d ? (p.top += o[0], p.left += o[1]) : 'top' === d ? (p.left += o[0], p.top -= o[1]) : 'bottom' === d && (p.left += o[0], p.top += o[1]), e.popper = p, e;\n  }\n\n  for (var _ = Math.min, X = Math.floor, J = Math.max, Q = 'undefined' != typeof window && 'undefined' != typeof document, Z = ['Edge', 'Trident', 'Firefox'], $ = 0, ee = 0; ee < Z.length; ee += 1) if (Q && 0 <= navigator.userAgent.indexOf(Z[ee])) {\n    $ = 1;\n    break;\n  }\n\n  var i,\n      te = Q && window.Promise,\n      oe = te ? function (e) {\n    var t = !1;\n    return function () {\n      t || (t = !0, window.Promise.resolve().then(function () {\n        t = !1, e();\n      }));\n    };\n  } : function (e) {\n    var t = !1;\n    return function () {\n      t || (t = !0, setTimeout(function () {\n        t = !1, e();\n      }, $));\n    };\n  },\n      ie = function () {\n    return void 0 == i && (i = -1 !== navigator.appVersion.indexOf('MSIE 10')), i;\n  },\n      ne = function (e, t) {\n    if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function');\n  },\n      re = function () {\n    function e(e, t) {\n      for (var o, n = 0; n < t.length; n++) o = t[n], o.enumerable = o.enumerable || !1, o.configurable = !0, 'value' in o && (o.writable = !0), Object.defineProperty(e, o.key, o);\n    }\n\n    return function (t, o, i) {\n      return o && e(t.prototype, o), i && e(t, i), t;\n    };\n  }(),\n      pe = function (e, t, o) {\n    return t in e ? Object.defineProperty(e, t, {\n      value: o,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : e[t] = o, e;\n  },\n      se = Object.assign || function (e) {\n    for (var t, o = 1; o < arguments.length; o++) for (var i in t = arguments[o], t) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);\n\n    return e;\n  },\n      de = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'],\n      ae = de.slice(3),\n      le = {\n    FLIP: 'flip',\n    CLOCKWISE: 'clockwise',\n    COUNTERCLOCKWISE: 'counterclockwise'\n  },\n      fe = function () {\n    function t(o, i) {\n      var n = this,\n          r = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : {};\n      ne(this, t), this.scheduleUpdate = function () {\n        return requestAnimationFrame(n.update);\n      }, this.update = oe(this.update.bind(this)), this.options = se({}, t.Defaults, r), this.state = {\n        isDestroyed: !1,\n        isCreated: !1,\n        scrollParents: []\n      }, this.reference = o && o.jquery ? o[0] : o, this.popper = i && i.jquery ? i[0] : i, this.options.modifiers = {}, Object.keys(se({}, t.Defaults.modifiers, r.modifiers)).forEach(function (e) {\n        n.options.modifiers[e] = se({}, t.Defaults.modifiers[e] || {}, r.modifiers ? r.modifiers[e] : {});\n      }), this.modifiers = Object.keys(this.options.modifiers).map(function (e) {\n        return se({\n          name: e\n        }, n.options.modifiers[e]);\n      }).sort(function (e, t) {\n        return e.order - t.order;\n      }), this.modifiers.forEach(function (t) {\n        t.enabled && e(t.onLoad) && t.onLoad(n.reference, n.popper, n.options, t, n.state);\n      }), this.update();\n      var p = this.options.eventsEnabled;\n      p && this.enableEventListeners(), this.state.eventsEnabled = p;\n    }\n\n    return re(t, [{\n      key: 'update',\n      value: function () {\n        return N.call(this);\n      }\n    }, {\n      key: 'destroy',\n      value: function () {\n        return P.call(this);\n      }\n    }, {\n      key: 'enableEventListeners',\n      value: function () {\n        return I.call(this);\n      }\n    }, {\n      key: 'disableEventListeners',\n      value: function () {\n        return R.call(this);\n      }\n    }]), t;\n  }();\n\n  return fe.Utils = ('undefined' == typeof window ? global : window).PopperUtils, fe.placements = de, fe.Defaults = {\n    placement: 'bottom',\n    eventsEnabled: !0,\n    removeOnDestroy: !1,\n    onCreate: function () {},\n    onUpdate: function () {},\n    modifiers: {\n      shift: {\n        order: 100,\n        enabled: !0,\n        fn: function (e) {\n          var t = e.placement,\n              o = t.split('-')[0],\n              i = t.split('-')[1];\n\n          if (i) {\n            var n = e.offsets,\n                r = n.reference,\n                p = n.popper,\n                s = -1 !== ['bottom', 'top'].indexOf(o),\n                d = s ? 'left' : 'top',\n                a = s ? 'width' : 'height',\n                l = {\n              start: pe({}, d, r[d]),\n              end: pe({}, d, r[d] + r[a] - p[a])\n            };\n            e.offsets.popper = se({}, p, l[i]);\n          }\n\n          return e;\n        }\n      },\n      offset: {\n        order: 200,\n        enabled: !0,\n        fn: G,\n        offset: 0\n      },\n      preventOverflow: {\n        order: 300,\n        enabled: !0,\n        fn: function (e, t) {\n          var o = t.boundariesElement || r(e.instance.popper);\n          e.instance.reference === o && (o = r(o));\n          var i = y(e.instance.popper, e.instance.reference, t.padding, o);\n          t.boundaries = i;\n          var n = t.priority,\n              p = e.offsets.popper,\n              s = {\n            primary: function (e) {\n              var o = p[e];\n              return p[e] < i[e] && !t.escapeWithReference && (o = J(p[e], i[e])), pe({}, e, o);\n            },\n            secondary: function (e) {\n              var o = 'right' === e ? 'left' : 'top',\n                  n = p[o];\n              return p[e] > i[e] && !t.escapeWithReference && (n = _(p[o], i[e] - ('right' === e ? p.width : p.height))), pe({}, o, n);\n            }\n          };\n          return n.forEach(function (e) {\n            var t = -1 === ['left', 'top'].indexOf(e) ? 'secondary' : 'primary';\n            p = se({}, p, s[t](e));\n          }), e.offsets.popper = p, e;\n        },\n        priority: ['left', 'right', 'top', 'bottom'],\n        padding: 5,\n        boundariesElement: 'scrollParent'\n      },\n      keepTogether: {\n        order: 400,\n        enabled: !0,\n        fn: function (e) {\n          var t = e.offsets,\n              o = t.popper,\n              i = t.reference,\n              n = e.placement.split('-')[0],\n              r = X,\n              p = -1 !== ['top', 'bottom'].indexOf(n),\n              s = p ? 'right' : 'bottom',\n              d = p ? 'left' : 'top',\n              a = p ? 'width' : 'height';\n          return o[s] < r(i[d]) && (e.offsets.popper[d] = r(i[d]) - o[a]), o[d] > r(i[s]) && (e.offsets.popper[d] = r(i[s])), e;\n        }\n      },\n      arrow: {\n        order: 500,\n        enabled: !0,\n        fn: function (e, o) {\n          var i;\n          if (!F(e.instance.modifiers, 'arrow', 'keepTogether')) return e;\n          var n = o.element;\n\n          if ('string' == typeof n) {\n            if (n = e.instance.popper.querySelector(n), !n) return e;\n          } else if (!e.instance.popper.contains(n)) return console.warn('WARNING: `arrow.element` must be child of its popper element!'), e;\n\n          var r = e.placement.split('-')[0],\n              p = e.offsets,\n              s = p.popper,\n              d = p.reference,\n              a = -1 !== ['left', 'right'].indexOf(r),\n              l = a ? 'height' : 'width',\n              f = a ? 'Top' : 'Left',\n              m = f.toLowerCase(),\n              h = a ? 'left' : 'top',\n              g = a ? 'bottom' : 'right',\n              u = L(n)[l];\n          d[g] - u < s[m] && (e.offsets.popper[m] -= s[m] - (d[g] - u)), d[m] + u > s[g] && (e.offsets.popper[m] += d[m] + u - s[g]), e.offsets.popper = c(e.offsets.popper);\n          var b = d[m] + d[l] / 2 - u / 2,\n              w = t(e.instance.popper),\n              y = parseFloat(w['margin' + f], 10),\n              E = parseFloat(w['border' + f + 'Width'], 10),\n              v = b - e.offsets.popper[m] - y - E;\n          return v = J(_(s[l] - u, v), 0), e.arrowElement = n, e.offsets.arrow = (i = {}, pe(i, m, Math.round(v)), pe(i, h, ''), i), e;\n        },\n        element: '[x-arrow]'\n      },\n      flip: {\n        order: 600,\n        enabled: !0,\n        fn: function (e, t) {\n          if (k(e.instance.modifiers, 'inner')) return e;\n          if (e.flipped && e.placement === e.originalPlacement) return e;\n          var o = y(e.instance.popper, e.instance.reference, t.padding, t.boundariesElement),\n              i = e.placement.split('-')[0],\n              n = x(i),\n              r = e.placement.split('-')[1] || '',\n              p = [];\n\n          switch (t.behavior) {\n            case le.FLIP:\n              p = [i, n];\n              break;\n\n            case le.CLOCKWISE:\n              p = q(i);\n              break;\n\n            case le.COUNTERCLOCKWISE:\n              p = q(i, !0);\n              break;\n\n            default:\n              p = t.behavior;\n          }\n\n          return p.forEach(function (s, d) {\n            if (i !== s || p.length === d + 1) return e;\n            i = e.placement.split('-')[0], n = x(i);\n            var a = e.offsets.popper,\n                l = e.offsets.reference,\n                f = X,\n                m = 'left' === i && f(a.right) > f(l.left) || 'right' === i && f(a.left) < f(l.right) || 'top' === i && f(a.bottom) > f(l.top) || 'bottom' === i && f(a.top) < f(l.bottom),\n                h = f(a.left) < f(o.left),\n                c = f(a.right) > f(o.right),\n                g = f(a.top) < f(o.top),\n                u = f(a.bottom) > f(o.bottom),\n                b = 'left' === i && h || 'right' === i && c || 'top' === i && g || 'bottom' === i && u,\n                w = -1 !== ['top', 'bottom'].indexOf(i),\n                y = !!t.flipVariations && (w && 'start' === r && h || w && 'end' === r && c || !w && 'start' === r && g || !w && 'end' === r && u);\n            (m || b || y) && (e.flipped = !0, (m || b) && (i = p[d + 1]), y && (r = K(r)), e.placement = i + (r ? '-' + r : ''), e.offsets.popper = se({}, e.offsets.popper, S(e.instance.popper, e.offsets.reference, e.placement)), e = C(e.instance.modifiers, e, 'flip'));\n          }), e;\n        },\n        behavior: 'flip',\n        padding: 5,\n        boundariesElement: 'viewport'\n      },\n      inner: {\n        order: 700,\n        enabled: !1,\n        fn: function (e) {\n          var t = e.placement,\n              o = t.split('-')[0],\n              i = e.offsets,\n              n = i.popper,\n              r = i.reference,\n              p = -1 !== ['left', 'right'].indexOf(o),\n              s = -1 === ['top', 'left'].indexOf(o);\n          return n[p ? 'left' : 'top'] = r[o] - (s ? n[p ? 'width' : 'height'] : 0), e.placement = x(t), e.offsets.popper = c(n), e;\n        }\n      },\n      hide: {\n        order: 800,\n        enabled: !0,\n        fn: function (e) {\n          if (!F(e.instance.modifiers, 'hide', 'preventOverflow')) return e;\n          var t = e.offsets.reference,\n              o = T(e.instance.modifiers, function (e) {\n            return 'preventOverflow' === e.name;\n          }).boundaries;\n\n          if (t.bottom < o.top || t.left > o.right || t.top > o.bottom || t.right < o.left) {\n            if (!0 === e.hide) return e;\n            e.hide = !0, e.attributes['x-out-of-boundaries'] = '';\n          } else {\n            if (!1 === e.hide) return e;\n            e.hide = !1, e.attributes['x-out-of-boundaries'] = !1;\n          }\n\n          return e;\n        }\n      },\n      computeStyle: {\n        order: 850,\n        enabled: !0,\n        fn: function (e, t) {\n          var o = t.x,\n              i = t.y,\n              n = e.offsets.popper,\n              p = T(e.instance.modifiers, function (e) {\n            return 'applyStyle' === e.name;\n          }).gpuAcceleration;\n          void 0 !== p && console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n          var s,\n              d,\n              a = void 0 === p ? t.gpuAcceleration : p,\n              l = r(e.instance.popper),\n              f = g(l),\n              m = {\n            position: n.position\n          },\n              h = {\n            left: X(n.left),\n            top: X(n.top),\n            bottom: X(n.bottom),\n            right: X(n.right)\n          },\n              c = 'bottom' === o ? 'top' : 'bottom',\n              u = 'right' === i ? 'left' : 'right',\n              b = W('transform');\n          if (d = 'bottom' == c ? -f.height + h.bottom : h.top, s = 'right' == u ? -f.width + h.right : h.left, a && b) m[b] = 'translate3d(' + s + 'px, ' + d + 'px, 0)', m[c] = 0, m[u] = 0, m.willChange = 'transform';else {\n            var w = 'bottom' == c ? -1 : 1,\n                y = 'right' == u ? -1 : 1;\n            m[c] = d * w, m[u] = s * y, m.willChange = c + ', ' + u;\n          }\n          var E = {\n            \"x-placement\": e.placement\n          };\n          return e.attributes = se({}, E, e.attributes), e.styles = se({}, m, e.styles), e.arrowStyles = se({}, e.offsets.arrow, e.arrowStyles), e;\n        },\n        gpuAcceleration: !0,\n        x: 'bottom',\n        y: 'right'\n      },\n      applyStyle: {\n        order: 900,\n        enabled: !0,\n        fn: function (e) {\n          return Y(e.instance.popper, e.styles), j(e.instance.popper, e.attributes), e.arrowElement && Object.keys(e.arrowStyles).length && Y(e.arrowElement, e.arrowStyles), e;\n        },\n        onLoad: function (e, t, o, i, n) {\n          var r = O(n, t, e),\n              p = v(o.placement, r, t, e, o.modifiers.flip.boundariesElement, o.modifiers.flip.padding);\n          return t.setAttribute('x-placement', p), Y(t, {\n            position: 'absolute'\n          }), o;\n        },\n        gpuAcceleration: void 0\n      }\n    }\n  }, fe;\n});","map":{"version":3,"sources":["../../src/utils/isFunction.js","../../src/utils/getStyleComputedProperty.js","../../src/utils/getParentNode.js","../../src/utils/getScrollParent.js","../../src/utils/getOffsetParent.js","../../src/utils/isOffsetContainer.js","../../src/utils/getRoot.js","../../src/utils/findCommonOffsetParent.js","../../src/utils/getScroll.js","../../src/utils/includeScroll.js","../../src/utils/getBordersSize.js","../../src/utils/getWindowSizes.js","../../src/utils/getClientRect.js","../../src/utils/getBoundingClientRect.js","../../src/utils/getOffsetRectRelativeToArbitraryNode.js","../../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../../src/utils/isFixed.js","../../src/utils/getBoundaries.js","../../src/utils/computeAutoPlacement.js","../../src/utils/getReferenceOffsets.js","../../src/utils/getOuterSizes.js","../../src/utils/getOppositePlacement.js","../../src/utils/getPopperOffsets.js","../../src/utils/find.js","../../src/utils/findIndex.js","../../src/utils/runModifiers.js","../../src/methods/update.js","../../src/utils/isModifierEnabled.js","../../src/utils/getSupportedPropertyName.js","../../src/methods/destroy.js","../../src/utils/getWindow.js","../../src/utils/setupEventListeners.js","../../src/methods/enableEventListeners.js","../../src/utils/removeEventListeners.js","../../src/methods/disableEventListeners.js","../../src/utils/isNumeric.js","../../src/utils/setStyles.js","../../src/utils/setAttributes.js","../../src/utils/isModifierRequired.js","../../src/utils/getOppositeVariation.js","../../src/utils/clockwise.js","../../src/modifiers/offset.js","../../src/utils/debounce.js","../../src/modifiers/arrow.js","../../src/modifiers/computeStyle.js","../../src/utils/isIE10.js","../../src/modifiers/flip.js","../../src/index.js","../../src/methods/defaults.js","../../src/modifiers/index.js","../../src/modifiers/shift.js","../../src/modifiers/preventOverflow.js","../../src/modifiers/keepTogether.js","../../src/modifiers/inner.js","../../src/modifiers/hide.js","../../src/modifiers/applyStyle.js"],"names":["functionToCheck","getType","element","nodeType","css","getComputedStyle","property","host","document","body","nodeName","overflow","overflowX","overflowY","getStyleComputedProperty","getScrollParent","getParentNode","offsetParent","documentElement","getOffsetParent","node","getRoot","element1","element2","order","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","setStart","setEnd","commonAncestorContainer","isOffsetContainer","element1root","findCommonOffsetParent","side","upperSide","html","scrollingElement","subtract","scrollTop","getScroll","scrollLeft","modifier","top","bottom","left","right","sideA","axis","sideB","parseFloat","styles","Math","max","isIE10","computedStyle","getSize","offsets","width","height","rect","result","sizes","getWindowSizes","horizScrollbar","vertScrollbar","getBordersSize","getClientRect","runIsIE10","isHTML","parent","childrenRect","getBoundingClientRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","includeScroll","relativeOffset","getOffsetRectRelativeToArbitraryNode","window","offset","isFixed","boundaries","boundariesElement","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","popper","padding","placement","getBoundaries","rects","refRect","sortedAreas","Object","getArea","b","a","filteredAreas","computedPlacement","key","variation","commonOffsetParent","x","y","hash","popperRect","getOuterSizes","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","referenceOffsets","getOppositePlacement","Array","arr","findIndex","cur","match","find","obj","modifiersToRun","ends","modifiers","forEach","warn","fn","isFunction","data","reference","isDestroyed","getReferenceOffsets","computeAutoPlacement","originalPlacement","getPopperOffsets","position","runModifiers","isCreated","state","options","onCreate","onUpdate","name","enabled","prefixes","upperProp","i","prefix","toCheck","isModifierEnabled","removeAttribute","style","getSupportedPropertyName","disableEventListeners","removeOnDestroy","parentNode","removeChild","ownerDocument","isBody","target","addEventListener","passive","push","updateBound","scrollElement","scrollParents","eventsEnabled","setupEventListeners","removeEventListener","removeEventListeners","n","isNaN","isFinite","keys","unit","isNumeric","value","attributes","setAttribute","requesting","isRequired","requested","validPlacements","placements","counter","index","split","str","size","useHeight","fragments","frag","divider","splitRegex","ops","mergeWithPrevious","op","toValue","index2","basePlacement","parseOffset","isBrowser","longerTimeoutBrowsers","timeoutDuration","navigator","called","Promise","resolve","then","scheduled","supportsMicroTasks","isModifierRequired","arrowElement","isVertical","len","sideCapitalized","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","arrow","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","prefixedProperty","willChange","invertTop","invertLeft","arrowStyles","BEHAVIORS","placementOpposite","flipOrder","behavior","FLIP","CLOCKWISE","clockwise","COUNTERCLOCKWISE","refOffsets","floor","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipped","getOppositeVariation","Popper","update","debounce","Defaults","modifierOptions","onLoad","destroy","enableEventListeners","scheduleUpdate","requestAnimationFrame","PopperUtils","shiftvariation","shiftOffsets","priority","check","escapeWithReference","subtractLength","bound","hide","length"],"mappings":"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","sourcesContent":["/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const css = getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  // NOTE: 1 DOM access here\n  const offsetParent = element && element.offsetParent;\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    if (element) {\n      return element.ownerDocument.documentElement\n    }\n\n    return document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`], 10) +\n    parseFloat(styles[`border${sideB}Width`], 10)\n  );\n}\n","import isIE10 from './isIE10';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE10()\n      ? html[`offset${axis}`] +\n        computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`] +\n        computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]\n      : 0\n  );\n}\n\nexport default function getWindowSizes() {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE10() && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE10 from './isIE10';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  if (isIE10()) {\n    try {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } catch (err) {}\n  } else {\n    rect = element.getBoundingClientRect();\n  }\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  const width =\n    sizes.width || element.clientWidth || result.right - result.left;\n  const height =\n    sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE10 from './isIE10';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent) {\n  const isIE10 = runIsIE10();\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop, 10);\n    const marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = getScroll(html);\n  const scrollLeft = getScroll(html, 'left');\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement\n) {\n  // NOTE: 1 DOM access here\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes();\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference) {\n  const commonOffsetParent = findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const styles = getComputedStyle(element);\n  const x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  const y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n  data.offsets.popper.position = 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length - 1; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroy the popper\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.left = '';\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger onUpdate callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nlet timeoutDuration = 0;\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjuction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`], 10);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`], 10);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  // floor sides to avoid blurry text\n  const offsets = {\n    left: Math.floor(popper.left),\n    top: Math.floor(popper.top),\n    bottom: Math.floor(popper.bottom),\n    right: Math.floor(popper.right),\n  };\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    top = -offsetParentRect.height + offsets.bottom;\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    left = -offsetParentRect.width + offsets.right;\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","/**\n * Tells if you are running Internet Explorer 10\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean} isIE10\n */\nlet isIE10 = undefined;\n\nexport default function() {\n  if (isIE10 === undefined) {\n    isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;\n  }\n  return isIE10;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    const flippedVariation =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Create a new Popper.js instance\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper.\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedule an update, it will run on the next UI update available\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overriden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass as 3rd argument an object with the same\n * structure of this object, example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Whether events (resize, scroll) are initially enabled\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated, this callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unitless, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the height.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * An scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper this makes sure the popper has always a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier, can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near eachothers\n   * without leaving any gap between the two. Expecially useful when the arrow is\n   * enabled and you want to assure it to point to its reference element.\n   * It cares only about the first axis, you can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjuction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations).\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position,\n     * the popper will never be placed outside of the defined boundaries\n     * (except if keepTogether is enabled)\n     */\n    boundariesElement: 'viewport',\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define you own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the informations used by Popper.js\n * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement\n  );\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side = ['left', 'top'].indexOf(placement) !== -1\n      ? 'primary'\n      : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper.\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: 'absolute' });\n\n  return options;\n}\n"]},"metadata":{},"sourceType":"script"}